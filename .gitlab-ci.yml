stages:
  - build
  - lint
  - test
  - delivery
  - deployment

variables:
  DEPLOYMENT_NAME: "landing-sales-frontend"
  CONFIGMAP_NAME: "landing-sales-frontend"
  CONTAINER_NAME: "landing-sales-frontend"
  APP_NAMESPACE: "applications"

Build Artifact:
  stage: build
  image: node:16.15.0-slim
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "test" || $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^NT.*/ && $CI_PIPELINE_SOURCE == "web"

Sonarqube Check:
  stage: lint
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - develop
    - test
    - master

Code Lint:
  stage: lint
  image: node:14.19.3-slim
  script:
    - npm install @angular/cli
    - npm run lint
  only:
    - develop
    - test
    - master
  allow_failure: true

Docker Build:
  stage: delivery
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}:develop"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
    - if: $CI_COMMIT_REF_NAME =~ /^NT.*/ && $CI_PIPELINE_SOURCE == "web"

Deployment Dev Environment:
  stage: deployment
  image: bitnami/kubectl:1.22
  script:
   - echo $K8SCONFIG | base64 -d > $HOME/.kube/config
   - kubectl set image "deployment/$DEPLOYMENT_NAME" $CONTAINER_NAME="${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
    - if: $CI_COMMIT_REF_NAME =~ /^NT.*/ && $CI_PIPELINE_SOURCE == "web"
